Resources:
  Vpc8378EB38:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: CdkCriptoAppStack/Vpc
    Metadata:
      aws:cdk:path: CdkCriptoAppStack/Vpc/Resource
  VpcPublicSubnet1Subnet5C2D37C4:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.0.0/18
      VpcId:
        Ref: Vpc8378EB38
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: CdkCriptoAppStack/Vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: CdkCriptoAppStack/Vpc/PublicSubnet1/Subnet
  VpcPublicSubnet1RouteTable6C95E38E:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      Tags:
        - Key: Name
          Value: CdkCriptoAppStack/Vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: CdkCriptoAppStack/Vpc/PublicSubnet1/RouteTable
  VpcPublicSubnet1RouteTableAssociation97140677:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VpcPublicSubnet1RouteTable6C95E38E
      SubnetId:
        Ref: VpcPublicSubnet1Subnet5C2D37C4
    Metadata:
      aws:cdk:path: CdkCriptoAppStack/Vpc/PublicSubnet1/RouteTableAssociation
  VpcPublicSubnet1DefaultRoute3DA9E72A:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VpcPublicSubnet1RouteTable6C95E38E
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: VpcIGWD7BA715C
    DependsOn:
      - VpcVPCGWBF912B6E
    Metadata:
      aws:cdk:path: CdkCriptoAppStack/Vpc/PublicSubnet1/DefaultRoute
  VpcPublicSubnet1EIPD7E02669:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: CdkCriptoAppStack/Vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: CdkCriptoAppStack/Vpc/PublicSubnet1/EIP
  VpcPublicSubnet1NATGateway4D7517AA:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId:
        Ref: VpcPublicSubnet1Subnet5C2D37C4
      AllocationId:
        Fn::GetAtt:
          - VpcPublicSubnet1EIPD7E02669
          - AllocationId
      Tags:
        - Key: Name
          Value: CdkCriptoAppStack/Vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: CdkCriptoAppStack/Vpc/PublicSubnet1/NATGateway
  VpcPublicSubnet2Subnet691E08A3:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.64.0/18
      VpcId:
        Ref: Vpc8378EB38
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: CdkCriptoAppStack/Vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: CdkCriptoAppStack/Vpc/PublicSubnet2/Subnet
  VpcPublicSubnet2RouteTable94F7E489:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      Tags:
        - Key: Name
          Value: CdkCriptoAppStack/Vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: CdkCriptoAppStack/Vpc/PublicSubnet2/RouteTable
  VpcPublicSubnet2RouteTableAssociationDD5762D8:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VpcPublicSubnet2RouteTable94F7E489
      SubnetId:
        Ref: VpcPublicSubnet2Subnet691E08A3
    Metadata:
      aws:cdk:path: CdkCriptoAppStack/Vpc/PublicSubnet2/RouteTableAssociation
  VpcPublicSubnet2DefaultRoute97F91067:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VpcPublicSubnet2RouteTable94F7E489
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: VpcIGWD7BA715C
    DependsOn:
      - VpcVPCGWBF912B6E
    Metadata:
      aws:cdk:path: CdkCriptoAppStack/Vpc/PublicSubnet2/DefaultRoute
  VpcPublicSubnet2EIP3C605A87:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: CdkCriptoAppStack/Vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: CdkCriptoAppStack/Vpc/PublicSubnet2/EIP
  VpcPublicSubnet2NATGateway9182C01D:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId:
        Ref: VpcPublicSubnet2Subnet691E08A3
      AllocationId:
        Fn::GetAtt:
          - VpcPublicSubnet2EIP3C605A87
          - AllocationId
      Tags:
        - Key: Name
          Value: CdkCriptoAppStack/Vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: CdkCriptoAppStack/Vpc/PublicSubnet2/NATGateway
  VpcPrivateSubnet1Subnet536B997A:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.128.0/18
      VpcId:
        Ref: Vpc8378EB38
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: CdkCriptoAppStack/Vpc/PrivateSubnet1
    Metadata:
      aws:cdk:path: CdkCriptoAppStack/Vpc/PrivateSubnet1/Subnet
  VpcPrivateSubnet1RouteTableB2C5B500:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      Tags:
        - Key: Name
          Value: CdkCriptoAppStack/Vpc/PrivateSubnet1
    Metadata:
      aws:cdk:path: CdkCriptoAppStack/Vpc/PrivateSubnet1/RouteTable
  VpcPrivateSubnet1RouteTableAssociation70C59FA6:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VpcPrivateSubnet1RouteTableB2C5B500
      SubnetId:
        Ref: VpcPrivateSubnet1Subnet536B997A
    Metadata:
      aws:cdk:path: CdkCriptoAppStack/Vpc/PrivateSubnet1/RouteTableAssociation
  VpcPrivateSubnet1DefaultRouteBE02A9ED:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VpcPrivateSubnet1RouteTableB2C5B500
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: VpcPublicSubnet1NATGateway4D7517AA
    Metadata:
      aws:cdk:path: CdkCriptoAppStack/Vpc/PrivateSubnet1/DefaultRoute
  VpcPrivateSubnet2Subnet3788AAA1:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.192.0/18
      VpcId:
        Ref: Vpc8378EB38
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: CdkCriptoAppStack/Vpc/PrivateSubnet2
    Metadata:
      aws:cdk:path: CdkCriptoAppStack/Vpc/PrivateSubnet2/Subnet
  VpcPrivateSubnet2RouteTableA678073B:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      Tags:
        - Key: Name
          Value: CdkCriptoAppStack/Vpc/PrivateSubnet2
    Metadata:
      aws:cdk:path: CdkCriptoAppStack/Vpc/PrivateSubnet2/RouteTable
  VpcPrivateSubnet2RouteTableAssociationA89CAD56:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VpcPrivateSubnet2RouteTableA678073B
      SubnetId:
        Ref: VpcPrivateSubnet2Subnet3788AAA1
    Metadata:
      aws:cdk:path: CdkCriptoAppStack/Vpc/PrivateSubnet2/RouteTableAssociation
  VpcPrivateSubnet2DefaultRoute060D2087:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VpcPrivateSubnet2RouteTableA678073B
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: VpcPublicSubnet2NATGateway9182C01D
    Metadata:
      aws:cdk:path: CdkCriptoAppStack/Vpc/PrivateSubnet2/DefaultRoute
  VpcIGWD7BA715C:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: CdkCriptoAppStack/Vpc
    Metadata:
      aws:cdk:path: CdkCriptoAppStack/Vpc/IGW
  VpcVPCGWBF912B6E:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      InternetGatewayId:
        Ref: VpcIGWD7BA715C
    Metadata:
      aws:cdk:path: CdkCriptoAppStack/Vpc/VPCGW
  FIleSystem6959F802:
    Type: AWS::EFS::FileSystem
    Properties:
      Encrypted: true
      FileSystemTags:
        - Key: Name
          Value: CdkCriptoAppStack/FIleSystem
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: CdkCriptoAppStack/FIleSystem/Resource
  FIleSystemEfsSecurityGroup34517EBA:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: CdkCriptoAppStack/FIleSystem/EfsSecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      Tags:
        - Key: Name
          Value: CdkCriptoAppStack/FIleSystem
      VpcId:
        Ref: Vpc8378EB38
    Metadata:
      aws:cdk:path: CdkCriptoAppStack/FIleSystem/EfsSecurityGroup/Resource
  FIleSystemEfsSecurityGroupfromCdkCriptoAppStackMyFunctionSecurityGroup06CE76DF204947F10826:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: from CdkCriptoAppStackMyFunctionSecurityGroup06CE76DF:2049
      FromPort: 2049
      GroupId:
        Fn::GetAtt:
          - FIleSystemEfsSecurityGroup34517EBA
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - MyFunctionSecurityGroup5241BB0E
          - GroupId
      ToPort: 2049
    Metadata:
      aws:cdk:path: CdkCriptoAppStack/FIleSystem/EfsSecurityGroup/from CdkCriptoAppStackMyFunctionSecurityGroup06CE76DF:2049
  FIleSystemEfsMountTarget182557B28:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId:
        Ref: FIleSystem6959F802
      SecurityGroups:
        - Fn::GetAtt:
            - FIleSystemEfsSecurityGroup34517EBA
            - GroupId
      SubnetId:
        Ref: VpcPrivateSubnet1Subnet536B997A
    Metadata:
      aws:cdk:path: CdkCriptoAppStack/FIleSystem/EfsMountTarget1
  FIleSystemEfsMountTarget29682FA46:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId:
        Ref: FIleSystem6959F802
      SecurityGroups:
        - Fn::GetAtt:
            - FIleSystemEfsSecurityGroup34517EBA
            - GroupId
      SubnetId:
        Ref: VpcPrivateSubnet2Subnet3788AAA1
    Metadata:
      aws:cdk:path: CdkCriptoAppStack/FIleSystem/EfsMountTarget2
  FIleSystemAccessPoint2A522FDD:
    Type: AWS::EFS::AccessPoint
    Properties:
      FileSystemId:
        Ref: FIleSystem6959F802
      PosixUser:
        Gid: "1001"
        Uid: "1001"
      RootDirectory:
        CreationInfo:
          OwnerGid: "1001"
          OwnerUid: "1001"
          Permissions: "750"
        Path: /message
    Metadata:
      aws:cdk:path: CdkCriptoAppStack/FIleSystem/AccessPoint/Resource
  MyFunctionServiceRole3C357FF2:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
    DependsOn:
      - FIleSystemEfsMountTarget182557B28
      - FIleSystemEfsMountTarget29682FA46
    Metadata:
      aws:cdk:path: CdkCriptoAppStack/MyFunction/ServiceRole/Resource
  MyFunctionServiceRoleDefaultPolicyB705ABD4:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: elasticfilesystem:ClientMount
            Condition:
              StringEquals:
                elasticfilesystem:AccessPointArn:
                  Fn::Join:
                    - ""
                    - - "arn:"
                      - Ref: AWS::Partition
                      - ":elasticfilesystem:"
                      - Ref: AWS::Region
                      - ":"
                      - Ref: AWS::AccountId
                      - :access-point/
                      - Ref: FIleSystemAccessPoint2A522FDD
            Effect: Allow
            Resource: "*"
          - Action: elasticfilesystem:ClientWrite
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":elasticfilesystem:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :file-system/
                  - Ref: FIleSystem6959F802
        Version: "2012-10-17"
      PolicyName: MyFunctionServiceRoleDefaultPolicyB705ABD4
      Roles:
        - Ref: MyFunctionServiceRole3C357FF2
    DependsOn:
      - FIleSystemEfsMountTarget182557B28
      - FIleSystemEfsMountTarget29682FA46
    Metadata:
      aws:cdk:path: CdkCriptoAppStack/MyFunction/ServiceRole/DefaultPolicy/Resource
  MyFunctionSecurityGroup5241BB0E:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Automatic security group for Lambda Function CdkCriptoAppStackMyFunction4B25F355
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: Vpc8378EB38
    DependsOn:
      - FIleSystemEfsMountTarget182557B28
      - FIleSystemEfsMountTarget29682FA46
    Metadata:
      aws:cdk:path: CdkCriptoAppStack/MyFunction/SecurityGroup/Resource
  MyFunction3BAA72D1:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParametersbc15ac278d7809159ea6c94ff3e2dde9e2136e5f086a87cb84839e544fc44d86S3BucketE9A7EDA2
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersbc15ac278d7809159ea6c94ff3e2dde9e2136e5f086a87cb84839e544fc44d86S3VersionKeyE3848E2B
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersbc15ac278d7809159ea6c94ff3e2dde9e2136e5f086a87cb84839e544fc44d86S3VersionKeyE3848E2B
      Role:
        Fn::GetAtt:
          - MyFunctionServiceRole3C357FF2
          - Arn
      FileSystemConfigs:
        - Arn:
            Fn::Join:
              - ""
              - - "arn:"
                - Ref: AWS::Partition
                - ":elasticfilesystem:"
                - Ref: AWS::Region
                - ":"
                - Ref: AWS::AccountId
                - :access-point/
                - Ref: FIleSystemAccessPoint2A522FDD
          LocalMountPath: /mnt/msg
      FunctionName: MainFunction
      Handler: index.handler
      Runtime: python3.8
      Timeout: 15
      VpcConfig:
        SecurityGroupIds:
          - Fn::GetAtt:
              - MyFunctionSecurityGroup5241BB0E
              - GroupId
        SubnetIds:
          - Ref: VpcPrivateSubnet1Subnet536B997A
          - Ref: VpcPrivateSubnet2Subnet3788AAA1
    DependsOn:
      - FIleSystemEfsMountTarget182557B28
      - FIleSystemEfsMountTarget29682FA46
      - FIleSystemEfsSecurityGroupfromCdkCriptoAppStackMyFunctionSecurityGroup06CE76DF204947F10826
      - MyFunctionServiceRoleDefaultPolicyB705ABD4
      - MyFunctionServiceRole3C357FF2
    Metadata:
      aws:cdk:path: CdkCriptoAppStack/MyFunction/Resource
      aws:asset:path: /home/jp/Documents/Github/cripto-app/cdk.out/asset.bc15ac278d7809159ea6c94ff3e2dde9e2136e5f086a87cb84839e544fc44d86
      aws:asset:is-bundled: true
      aws:asset:property: Code
  Gateway43CB3636:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: Gateway
    Metadata:
      aws:cdk:path: CdkCriptoAppStack/Gateway/Resource
  GatewayCloudWatchRole34305E06:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs
    Metadata:
      aws:cdk:path: CdkCriptoAppStack/Gateway/CloudWatchRole/Resource
  GatewayAccount6D7AA49C:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn:
        Fn::GetAtt:
          - GatewayCloudWatchRole34305E06
          - Arn
    DependsOn:
      - Gateway43CB3636
    Metadata:
      aws:cdk:path: CdkCriptoAppStack/Gateway/Account
  GatewayDeployment880EB8C25dda1761cb243faf797bce700b57e90a:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId:
        Ref: Gateway43CB3636
      Description: Automatically created by the RestApi construct
    DependsOn:
      - GatewaymainOPTIONS54A9C5A3
      - GatewaymainPOST43329E5C
      - Gatewaymain81BE280A
      - GatewayOPTIONS9DF93096
    Metadata:
      aws:cdk:path: CdkCriptoAppStack/Gateway/Deployment/Resource
  GatewayDeploymentStageprod62BC6904:
    Type: AWS::ApiGateway::Stage
    Properties:
      RestApiId:
        Ref: Gateway43CB3636
      DeploymentId:
        Ref: GatewayDeployment880EB8C25dda1761cb243faf797bce700b57e90a
      StageName: prod
    Metadata:
      aws:cdk:path: CdkCriptoAppStack/Gateway/DeploymentStage.prod/Resource
  GatewayOPTIONS9DF93096:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Fn::GetAtt:
          - Gateway43CB3636
          - RootResourceId
      RestApiId:
        Ref: Gateway43CB3636
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Credentials: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: CdkCriptoAppStack/Gateway/Default/OPTIONS/Resource
  Gatewaymain81BE280A:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - Gateway43CB3636
          - RootResourceId
      PathPart: main
      RestApiId:
        Ref: Gateway43CB3636
    Metadata:
      aws:cdk:path: CdkCriptoAppStack/Gateway/Default/main/Resource
  GatewaymainOPTIONS54A9C5A3:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: Gatewaymain81BE280A
      RestApiId:
        Ref: Gateway43CB3636
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Credentials: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: CdkCriptoAppStack/Gateway/Default/main/OPTIONS/Resource
  GatewaymainPOSTApiPermissionCdkCriptoAppStackGatewayB9D82B24POSTmain6196875E:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - MyFunction3BAA72D1
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: Gateway43CB3636
            - /
            - Ref: GatewayDeploymentStageprod62BC6904
            - /POST/main
    Metadata:
      aws:cdk:path: CdkCriptoAppStack/Gateway/Default/main/POST/ApiPermission.CdkCriptoAppStackGatewayB9D82B24.POST..main
  GatewaymainPOSTApiPermissionTestCdkCriptoAppStackGatewayB9D82B24POSTmain6BA1C31B:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - MyFunction3BAA72D1
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: Gateway43CB3636
            - /test-invoke-stage/POST/main
    Metadata:
      aws:cdk:path: CdkCriptoAppStack/Gateway/Default/main/POST/ApiPermission.Test.CdkCriptoAppStackGatewayB9D82B24.POST..main
  GatewaymainPOST43329E5C:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      ResourceId:
        Ref: Gatewaymain81BE280A
      RestApiId:
        Ref: Gateway43CB3636
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - MyFunction3BAA72D1
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: CdkCriptoAppStack/Gateway/Default/main/POST/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/31STW/CMAz9LbuHMIa284ANhDS2ChD3NDUl0CZV4oCqqv99TkqBXXbye47tPH+M+Gj8yp+f3sXFDWR2GjbSWODNBoU8sTU4460ENnEOkHy50jmbGe3QeolstteJsKIEBBvIj8fKR/ctkzDFZwqV0S0LvzQgX3izq2R42yUzlvi0UHLjUw0x947WxiNsRVrA3X/3kSgjlQiVb8EBfC6TYL4FLgTCRdQssepM8F54qUkx4T6gU3JlE6TmDyVoZBuQ3iqsF9b4Kmr417HUuQXnWgZ7x5u5KmBTO4QyBP5lK+M1boXNSc9ESkpKjNJR2wNtWSHKNBODqsaD0TyJZu61jE0rUfJmbbrpRJsYmmRsp0Mtc+OBCMtzPO6QOJ96eQKcCgfX8rwJ+vqqIRlsqZzrVlapvJsLb75iOO0WJ5W6rrmHJDv0xD6gKkwdp0feBxbOp9tjBP2FRB0roMayOJgOPd5Pj9u2ZdpkwI9ueB690eXS4R6dUgNLH6sS+Lqzv8xES+XVAgAA
    Metadata:
      aws:cdk:path: CdkCriptoAppStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Parameters:
  AssetParametersbc15ac278d7809159ea6c94ff3e2dde9e2136e5f086a87cb84839e544fc44d86S3BucketE9A7EDA2:
    Type: String
    Description: S3 bucket for asset "bc15ac278d7809159ea6c94ff3e2dde9e2136e5f086a87cb84839e544fc44d86"
  AssetParametersbc15ac278d7809159ea6c94ff3e2dde9e2136e5f086a87cb84839e544fc44d86S3VersionKeyE3848E2B:
    Type: String
    Description: S3 key for asset version "bc15ac278d7809159ea6c94ff3e2dde9e2136e5f086a87cb84839e544fc44d86"
  AssetParametersbc15ac278d7809159ea6c94ff3e2dde9e2136e5f086a87cb84839e544fc44d86ArtifactHashF8B46B78:
    Type: String
    Description: Artifact hash for asset "bc15ac278d7809159ea6c94ff3e2dde9e2136e5f086a87cb84839e544fc44d86"
Outputs:
  GatewayEndpoint4DF49EE0:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: Gateway43CB3636
          - .execute-api.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /
          - Ref: GatewayDeploymentStageprod62BC6904
          - /
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2

