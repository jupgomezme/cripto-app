Resources:
  MyFunctionServiceRole3C357FF2:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: CdkCriptoAppStack/MyFunction/ServiceRole/Resource
  MyFunction3BAA72D1:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParametersf0bd71f8c49090b8c4f7d56a55265e5f328371ec1ecc4d624300786729041306S3Bucket89D52A95
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersf0bd71f8c49090b8c4f7d56a55265e5f328371ec1ecc4d624300786729041306S3VersionKey79A367C2
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersf0bd71f8c49090b8c4f7d56a55265e5f328371ec1ecc4d624300786729041306S3VersionKey79A367C2
      Role:
        Fn::GetAtt:
          - MyFunctionServiceRole3C357FF2
          - Arn
      FunctionName: MainFunction
      Handler: index.handler
      Runtime: python3.8
      Timeout: 15
    DependsOn:
      - MyFunctionServiceRole3C357FF2
    Metadata:
      aws:cdk:path: CdkCriptoAppStack/MyFunction/Resource
      aws:asset:path: /home/jp/Documents/Github/cripto-app/cdk.out/asset.f0bd71f8c49090b8c4f7d56a55265e5f328371ec1ecc4d624300786729041306
      aws:asset:original-path: /home/jp/Documents/Github/cripto-app/src
      aws:asset:is-bundled: true
      aws:asset:property: Code
  Gateway43CB3636:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: Gateway
    Metadata:
      aws:cdk:path: CdkCriptoAppStack/Gateway/Resource
  GatewayCloudWatchRole34305E06:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs
    Metadata:
      aws:cdk:path: CdkCriptoAppStack/Gateway/CloudWatchRole/Resource
  GatewayAccount6D7AA49C:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn:
        Fn::GetAtt:
          - GatewayCloudWatchRole34305E06
          - Arn
    DependsOn:
      - Gateway43CB3636
    Metadata:
      aws:cdk:path: CdkCriptoAppStack/Gateway/Account
  GatewayDeployment880EB8C25dda1761cb243faf797bce700b57e90a:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId:
        Ref: Gateway43CB3636
      Description: Automatically created by the RestApi construct
    DependsOn:
      - GatewaymainOPTIONS54A9C5A3
      - GatewaymainPOST43329E5C
      - Gatewaymain81BE280A
      - GatewayOPTIONS9DF93096
    Metadata:
      aws:cdk:path: CdkCriptoAppStack/Gateway/Deployment/Resource
  GatewayDeploymentStageprod62BC6904:
    Type: AWS::ApiGateway::Stage
    Properties:
      RestApiId:
        Ref: Gateway43CB3636
      DeploymentId:
        Ref: GatewayDeployment880EB8C25dda1761cb243faf797bce700b57e90a
      StageName: prod
    Metadata:
      aws:cdk:path: CdkCriptoAppStack/Gateway/DeploymentStage.prod/Resource
  GatewayOPTIONS9DF93096:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Fn::GetAtt:
          - Gateway43CB3636
          - RootResourceId
      RestApiId:
        Ref: Gateway43CB3636
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Credentials: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: CdkCriptoAppStack/Gateway/Default/OPTIONS/Resource
  Gatewaymain81BE280A:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - Gateway43CB3636
          - RootResourceId
      PathPart: main
      RestApiId:
        Ref: Gateway43CB3636
    Metadata:
      aws:cdk:path: CdkCriptoAppStack/Gateway/Default/main/Resource
  GatewaymainOPTIONS54A9C5A3:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: Gatewaymain81BE280A
      RestApiId:
        Ref: Gateway43CB3636
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
              method.response.header.Access-Control-Allow-Credentials: "'true'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Credentials: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: CdkCriptoAppStack/Gateway/Default/main/OPTIONS/Resource
  GatewaymainPOSTApiPermissionCdkCriptoAppStackGatewayB9D82B24POSTmain6196875E:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - MyFunction3BAA72D1
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: Gateway43CB3636
            - /
            - Ref: GatewayDeploymentStageprod62BC6904
            - /POST/main
    Metadata:
      aws:cdk:path: CdkCriptoAppStack/Gateway/Default/main/POST/ApiPermission.CdkCriptoAppStackGatewayB9D82B24.POST..main
  GatewaymainPOSTApiPermissionTestCdkCriptoAppStackGatewayB9D82B24POSTmain6BA1C31B:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - MyFunction3BAA72D1
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: Gateway43CB3636
            - /test-invoke-stage/POST/main
    Metadata:
      aws:cdk:path: CdkCriptoAppStack/Gateway/Default/main/POST/ApiPermission.Test.CdkCriptoAppStackGatewayB9D82B24.POST..main
  GatewaymainPOST43329E5C:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      ResourceId:
        Ref: Gatewaymain81BE280A
      RestApiId:
        Ref: Gateway43CB3636
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - MyFunction3BAA72D1
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: CdkCriptoAppStack/Gateway/Default/main/POST/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/01Q0U7DMAz8Ft7TjGqIZ7qhPYGYyheY1JSsTVLFDlMV9d9J0hXtyWfncj5fLev9k3x8eIErVaobdlE5jzJ+MqhBNETICfba9uLoLLEPisXx257Bg0FGn5uPwFMo4xbJBa8w48TvNGtnF5HF4wjmq4NqmvnHWXku5RSsyhShwcjYurH8zHURtK8g7ydZbKReHoIakA9AKFY1GRP9XyT7Qm800bp10j0wXmGW8a3Qkz1uJn1zusFGKRcsi1ecRjcbtOWUuy4nUIytYDuy+HjHdEeXH2/oPoINL8sirOtQXmj3Wz+nzFPkF9K68mmxNijbtf4BYFYDn48BAAA=
    Metadata:
      aws:cdk:path: CdkCriptoAppStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Parameters:
  AssetParametersf0bd71f8c49090b8c4f7d56a55265e5f328371ec1ecc4d624300786729041306S3Bucket89D52A95:
    Type: String
    Description: S3 bucket for asset "f0bd71f8c49090b8c4f7d56a55265e5f328371ec1ecc4d624300786729041306"
  AssetParametersf0bd71f8c49090b8c4f7d56a55265e5f328371ec1ecc4d624300786729041306S3VersionKey79A367C2:
    Type: String
    Description: S3 key for asset version "f0bd71f8c49090b8c4f7d56a55265e5f328371ec1ecc4d624300786729041306"
  AssetParametersf0bd71f8c49090b8c4f7d56a55265e5f328371ec1ecc4d624300786729041306ArtifactHashD0809875:
    Type: String
    Description: Artifact hash for asset "f0bd71f8c49090b8c4f7d56a55265e5f328371ec1ecc4d624300786729041306"
Outputs:
  GatewayEndpoint4DF49EE0:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: Gateway43CB3636
          - .execute-api.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /
          - Ref: GatewayDeploymentStageprod62BC6904
          - /
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2

